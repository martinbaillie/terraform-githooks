#!/usr/bin/env bash
set -o errexit
set -o pipefail

IFS=$'\n\t'
RED='\033[0;31m'
GRN='\033[0;32m'
NOC='\033[0m'
CHECK="${GRN}✔${NOC}"
CROSS="${RED}✘${NOC}"

PATCH_NAME="pre-commit-fmt-$(date +%s).patch"

# Cleanup
finish() { rm -f "${PATCH_NAME}"; }
trap finish EXIT

# Find the difference between what is staged and what is modified but unstaged.
git diff > "${PATCH_NAME}"

# Remove un-staged changes.
if [[ -s "${PATCH_NAME}" ]]; then
    git apply --reverse "${PATCH_NAME}"
fi

# For all the files altered within this commit.
ret=0
for f in $(git diff --cached --name-only); do
  {
    if [ -e "${f}" ] && ([[ "${f}" == *.tf ]] || [[ "${f}" == *.tfvars ]]); then
        if ! terraform fmt -list=false -write=false -check=true "${f}"; then
            echo >&2 -e \
              "${CROSS} terraform fmt: file \"${f}\" needs formatted"
            ret=1
        fi
    fi
  } || : # Avoid errexit
done

# Add back un-staged changes.
if [[ -s "${PATCH_NAME}" ]]; then
    git apply "${PATCH_NAME}"
fi

# Clean up and exit.
[ $ret -eq 0 ] && echo -e "${CHECK} terraform fmt"
exit ${ret}
